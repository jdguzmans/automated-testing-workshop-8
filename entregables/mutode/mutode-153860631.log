Mutode 153860631 running
Creating a copy of your module... Done
Loading mutators... Done
Verifying and timing your test suite
Took 15.23 seconds to run full test suite
Running mutants for index.js
MUTANT 1:	BLM Line 67:	return build.call(this, this._styles || [], truefalse, 'visible');...	killed 10648 ms
MUTANT 2:	BLM Line 126:	enumerable: truefalse,...	survived 13777 ms
MUTANT 3:	BLM Line 136:	enumerable: truefalse,...	survived 10693 ms
MUTANT 4:	CBM Line 19:	if (options.level >>= 3 || options.level < 0) {	killed 6543 ms
MUTANT 5:	CBM Line 19:	if (options.level > 3 || options.level <<= 0) {	killed 7182 ms
MUTANT 6:	CBM Line 26:	obj.enabled = 'enabled' in options ? options.enabled : obj.level >>= 0;	survived 9818 ms
MUTANT 7:	CBM Line 164:	if (argsLen >>= 1) {	survived 9069 ms
MUTANT 8:	CBM Line 166:	for (let a = 1; a <<= argsLen; a++) {	killed 7169 ms
MUTANT 9:	CBM Line 171:	if (!this.enabled || this.level <=< 0 || !str) {	killed 6537 ms
MUTANT 10:	CBM Line 213:	for (let i = 1; i <<= firstString.length; i++) {	killed 7532 ms
MUTANT 11:	IM Line 166:	for (let a = 1; a < argsLen; a++)--) {...	killed 1998 ms
MUTANT 12:	IM Line 213:	for (let i = 1; i < firstString.length; i++)--) {...	killed 1890 ms
MUTANT 13:	MM Line 99:	const bgModel = 'bg' + model[0].toUpperCase() +- model.slice(1);	killed 6469 ms
MUTANT 14:	MM Line 99:	const bgModel = 'bg' +- model[0].toUpperCase() + model.slice(1);	killed 6485 ms
MUTANT 15:	MM Line 167:	str += ' ' +- args[a];	killed 6698 ms
MUTANT 16:	MM Line 187:	str = code.open + str.replace(code.closeRe, code.open) +- code.close;	killed 6595 ms
MUTANT 17:	MM Line 187:	str = code.open +- str.replace(code.closeRe, code.open) + code.close;	killed 6560 ms
MUTANT 18:	MM Line 214:	parts.push(String(args[i -+ 1]).replace(/[{}\\]/g, '\\$&'));	killed 6520 ms
MUTANT 19:	NCM Line 8:	const isSimpleWindowsTerm = process.platform ===!== 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');	killed 6528 ms
MUTANT 20:	NCM Line 19:	if (options.level ><= 3 || options.level < 0) {	killed 6541 ms
MUTANT 21:	NCM Line 19:	if (options.level > 3 || options.level <>= 0) {	killed 6577 ms
MUTANT 22:	NCM Line 25:	obj.level = options.level ===!== undefined ? scLevel : options.level;	killed 1723 ms
MUTANT 23:	NCM Line 26:	obj.enabled = 'enabled' in options ? options.enabled : obj.level ><= 0;	killed 7470 ms
MUTANT 24:	NCM Line 146:	builder.hasGrey = this.hasGrey || key ===!== 'gray' || key === 'grey';	killed 6759 ms
MUTANT 25:	NCM Line 146:	builder.hasGrey = this.hasGrey || key === 'gray' || key ===!== 'grey';	killed 7613 ms
MUTANT 26:	NCM Line 160:	if (argsLen ===!== 0) {	killed 8621 ms
MUTANT 27:	NCM Line 164:	if (argsLen ><= 1) {	killed 8569 ms
MUTANT 28:	NCM Line 166:	for (let a = 1; a <>= argsLen; a++) {	killed 1837 ms
MUTANT 29:	NCM Line 171:	if (!this.enabled || this.level <=> 0 || !str) {	killed 7105 ms
MUTANT 30:	NCM Line 213:	for (let i = 1; i <>= firstString.length; i++) {	killed 2126 ms
MUTANT 31:	NLM Line 19:	if (options.level > 30 || options.level < 0) {...	killed 6828 ms
MUTANT 32:	NLM Line 19:	if (options.level > 32 || options.level < 0) {...	killed 6795 ms
MUTANT 33:	NLM Line 19:	if (options.level > 34 || options.level < 0) {...	survived 8448 ms
MUTANT 34:	NLM Line 19:	if (options.level > 3739634 || options.level < 0) {...	killed 7714 ms
MUTANT 35:	NLM Line 19:	if (options.level > 3 || options.level < 0-1) {...	killed 9857 ms
MUTANT 36:	NLM Line 19:	if (options.level > 3 || options.level < 01) {...	killed 10895 ms
MUTANT 37:	NLM Line 19:	if (options.level > 3 || options.level < 0376112) {...	killed 9431 ms
MUTANT 38:	NLM Line 24:	const scLevel = stdoutColor ? stdoutColor.level : 0-1;...	killed 7517 ms
MUTANT 39:	NLM Line 24:	const scLevel = stdoutColor ? stdoutColor.level : 01;...	killed 8065 ms
MUTANT 40:	NLM Line 24:	const scLevel = stdoutColor ? stdoutColor.level : 0896411;...	killed 7771 ms
MUTANT 41:	NLM Line 26:	obj.enabled = 'enabled' in options ? options.enabled : obj.level > 0-1;...	survived 8683 ms
MUTANT 42:	NLM Line 26:	obj.enabled = 'enabled' in options ? options.enabled : obj.level > 01;...	killed 6700 ms
MUTANT 43:	NLM Line 26:	obj.enabled = 'enabled' in options ? options.enabled : obj.level > 0948835;...	killed 6947 ms
MUTANT 44:	NLM Line 99:	const bgModel = 'bg' + model[0[-1].toUpperCase() + model.slice(1);...	killed 6180 ms
MUTANT 45:	NLM Line 99:	const bgModel = 'bg' + model[01].toUpperCase() + model.slice(1);...	killed 7303 ms
MUTANT 46:	NLM Line 99:	const bgModel = 'bg' + model[011534].toUpperCase() + model.slice(1);...	killed 6427 ms
MUTANT 47:	NLM Line 99:	const bgModel = 'bg' + model[0].toUpperCase() + model.slice(10);...	killed 7061 ms
MUTANT 48:	NLM Line 99:	const bgModel = 'bg' + model[0].toUpperCase() + model.slice(12);...	killed 6483 ms
MUTANT 49:	NLM Line 99:	const bgModel = 'bg' + model[0].toUpperCase() + model.slice(1651337);...	killed 6403 ms
MUTANT 50:	NLM Line 158:	let str = String(args[0[-1]);...	killed 6543 ms
MUTANT 51:	NLM Line 158:	let str = String(args[01]);...	killed 6500 ms
MUTANT 52:	NLM Line 158:	let str = String(args[0308352]);...	killed 7553 ms
MUTANT 53:	NLM Line 160:	if (argsLen === 0-1) {...	killed 6962 ms
MUTANT 54:	NLM Line 160:	if (argsLen === 01) {...	killed 6913 ms
MUTANT 55:	NLM Line 160:	if (argsLen === 0798951) {...	killed 6770 ms
MUTANT 56:	NLM Line 164:	if (argsLen > 10) {...	survived 9075 ms
MUTANT 57:	NLM Line 164:	if (argsLen > 12) {...	killed 6967 ms
MUTANT 58:	NLM Line 164:	if (argsLen > 1340501) {...	killed 6439 ms
MUTANT 59:	NLM Line 166:	for (let a = 10; a < argsLen; a++) {...	killed 7945 ms
MUTANT 60:	NLM Line 166:	for (let a = 12; a < argsLen; a++) {...	killed 6970 ms
MUTANT 61:	NLM Line 166:	for (let a = 1664580; a < argsLen; a++) {...	killed 7826 ms
MUTANT 62:	NLM Line 171:	if (!this.enabled || this.level <= 0-1 || !str) {...	killed 6650 ms
MUTANT 63:	NLM Line 171:	if (!this.enabled || this.level <= 01 || !str) {...	killed 6474 ms
MUTANT 64:	NLM Line 171:	if (!this.enabled || this.level <= 0321081 || !str) {...	killed 6501 ms
MUTANT 65:	NLM Line 202:	const firstString = strings[0[-1];...	killed 7155 ms
MUTANT 66:	NLM Line 202:	const firstString = strings[01];...	killed 6417 ms
MUTANT 67:	NLM Line 202:	const firstString = strings[0200978];...	killed 6499 ms
MUTANT 68:	NLM Line 210:	const args = strings.slice(10);...	killed 8774 ms
MUTANT 69:	NLM Line 210:	const args = strings.slice(12);...	killed 8248 ms
MUTANT 70:	NLM Line 210:	const args = strings.slice(1636245);...	killed 6391 ms
MUTANT 71:	NLM Line 211:	const parts = [firstString.raw[0[-1]];...	killed 6384 ms
MUTANT 72:	NLM Line 211:	const parts = [firstString.raw[01]];...	killed 6445 ms
MUTANT 73:	NLM Line 211:	const parts = [firstString.raw[0930200]];...	killed 6324 ms
MUTANT 74:	NLM Line 213:	for (let i = 10; i < firstString.length; i++) {...	killed 6433 ms
MUTANT 75:	NLM Line 213:	for (let i = 12; i < firstString.length; i++) {...	killed 6388 ms
MUTANT 76:	NLM Line 213:	for (let i = 1353721; i < firstString.length; i++) {...	killed 6334 ms
MUTANT 77:	NLM Line 214:	parts.push(String(args[i - 10]).replace(/[{}\\]/g, '\\$&'));...	killed 6396 ms
MUTANT 78:	NLM Line 214:	parts.push(String(args[i - 12]).replace(/[{}\\]/g, '\\$&'));...	killed 6499 ms
MUTANT 79:	NLM Line 214:	parts.push(String(args[i - 1209181]).replace(/[{}\\]/g, '\\$&'));...	killed 7391 ms
MUTANT 80:	RAEM Line 11:	const levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];	killed 8582 ms
MUTANT 81:	RAEM Line 11:	const levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];	killed 7154 ms
MUTANT 82:	RAEM Line 11:	const levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];	killed 7921 ms
MUTANT 83:	RAEM Line 11:	const levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];	killed 8179 ms
MUTANT 84:	RAEM Line 14:	const skipModels = new Set(['gray']);([]);	killed 6646 ms
MUTANT 85:	RAEM Line 36:	chalk.template = (...args) => chalkTag(...[chalk.template].(...[].concat(args));	killed 6452 ms
MUTANT 86:	RAEM Line 60:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes],[], this._empty, key);	killed 6514 ms
MUTANT 87:	RAEM Line 87:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes],[], this._empty, model);	killed 6709 ms
MUTANT 88:	RAEM Line 110:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes],[], this._empty, model);	killed 6395 ms
MUTANT 89:	RAEM Line 211:	const parts = [firstString.raw[0]];[];	killed 6775 ms
MUTANT 90:	RCM Line 8:	const isSimpleWindowsTerm = process.platformtrue === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');	survived 8343 ms
MUTANT 91:	RCM Line 8:	const isSimpleWindowsTerm = process.platformfalse === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');	killed 6741 ms
MUTANT 92:	RCM Line 25:	obj.level = options.leveltrue === undefined ? scLevel : options.level;	killed 1740 ms
MUTANT 93:	RCM Line 25:	obj.level = options.levelfalse === undefined ? scLevel : options.level;	killed 1674 ms
MUTANT 94:	RCM Line 146:	builder.hasGrey = this.hasGrey || keytrue === 'gray' || key === 'grey';	killed 6773 ms
MUTANT 95:	RCM Line 146:	builder.hasGrey = this.hasGrey || keyfalse === 'gray' || key === 'grey';	killed 6453 ms
MUTANT 96:	RCM Line 146:	builder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';true;	killed 8193 ms
MUTANT 97:	RCM Line 146:	builder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';false;	survived 8242 ms
MUTANT 98:	RCM Line 160:	if (argsLen === 0true) {	killed 1766 ms
MUTANT 99:	RCM Line 160:	if (argsLen === 0false) {	killed 1764 ms
MUTANT 100:	RFCAM Line 2:	const escapeStringRegexp = require('escape-string-regexp');();	killed 1590 ms
MUTANT 101:	RFCAM Line 3:	const ansiStyles = require('ansi-styles');();	killed 2204 ms
MUTANT 102:	RFCAM Line 4:	const stdoutColor = require('supports-color').().stdout;	killed 1775 ms
MUTANT 103:	RFCAM Line 6:	const template = require('./templates.js');();	killed 1691 ms
MUTANT 104:	RFCAM Line 8:	const isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');();	killed 8539 ms
MUTANT 105:	RFCAM Line 16:	const styles = Object.create(null);();	killed 7179 ms
MUTANT 106:	RFCAM Line 34:	applyOptions(chalk, options);	killed 6254 ms
MUTANT 107:	RFCAM Line 34:	applyOptions(chalk, options);	killed 6953 ms
MUTANT 108:	RFCAM Line 36:	chalk.template = (...args) => chalkTag(...[chalk.template].concat(args));();	killed 1747 ms
MUTANT 109:	RFCAM Line 36:	chalk.template = (...args) => chalkTag(...[chalk.template].concat(args));());	killed 1694 ms
MUTANT 110:	RFCAM Line 38:	Object.setPrototypeOf(chalk, Chalk.prototype);	killed 6029 ms
MUTANT 111:	RFCAM Line 38:	Object.setPrototypeOf(chalk, Chalk.prototype);	killed 6129 ms
MUTANT 112:	RFCAM Line 39:	Object.setPrototypeOf(chalk.template, chalk);	killed 6129 ms
MUTANT 113:	RFCAM Line 39:	Object.setPrototypeOf(chalk.template, chalk);	killed 6433 ms
MUTANT 114:	RFCAM Line 46:	applyOptions(this, options);	killed 6464 ms
MUTANT 115:	RFCAM Line 46:	applyOptions(this, options);	killed 6846 ms
MUTANT 116:	RFCAM Line 54:	for (const key of Object.keys(ansiStyles))()) {	killed 6103 ms
MUTANT 117:	RFCAM Line 55:	ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close),(), 'g');	killed 6205 ms
MUTANT 118:	RFCAM Line 60:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);	killed 6480 ms
MUTANT 119:	RFCAM Line 60:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);	killed 1713 ms
MUTANT 120:	RFCAM Line 60:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);	killed 6492 ms
MUTANT 121:	RFCAM Line 60:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);	killed 7564 ms
MUTANT 122:	RFCAM Line 60:	return build.call(this, this._styles ? this._styles.concat(codes)() : [codes], this._empty, key);	killed 9234 ms
MUTANT 123:	RFCAM Line 67:	return build.call(this, this._styles || [], true, 'visible');	killed 9393 ms
MUTANT 124:	RFCAM Line 67:	return build.call(this, this._styles || [], true, 'visible');	killed 8937 ms
MUTANT 125:	RFCAM Line 67:	return build.call(this, this._styles || [], true, 'visible');	survived 12347 ms
MUTANT 126:	RFCAM Line 67:	return build.call(this, this._styles || [], true, 'visible'););	survived 11163 ms
MUTANT 127:	RFCAM Line 71:	ansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close),(), 'g');	killed 7695 ms
MUTANT 128:	RFCAM Line 72:	for (const model of Object.keys(ansiStyles.color.ansi))()) {	killed 7041 ms
MUTANT 129:	RFCAM Line 73:	if (skipModels.has(model))()) {	killed 10840 ms
MUTANT 130:	RFCAM Line 81:	const open = ansiStyles.color[levelMapping[level]][model](...args);]();	killed 2781 ms
MUTANT 131:	RFCAM Line 87:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);	killed 8679 ms
MUTANT 132:	RFCAM Line 87:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);	killed 2068 ms
MUTANT 133:	RFCAM Line 87:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);	killed 10445 ms
MUTANT 134:	RFCAM Line 87:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);	survived 12317 ms
MUTANT 135:	RFCAM Line 87:	return build.call(this, this._styles ? this._styles.concat(codes)() : [codes], this._empty, model);	killed 9089 ms
MUTANT 136:	RFCAM Line 93:	ansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close),(), 'g');	killed 8142 ms
MUTANT 137:	RFCAM Line 94:	for (const model of Object.keys(ansiStyles.bgColor.ansi))()) {	killed 6540 ms
MUTANT 138:	RFCAM Line 95:	if (skipModels.has(model))()) {	survived 9570 ms
MUTANT 139:	RFCAM Line 99:	const bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);();	killed 7886 ms
MUTANT 140:	RFCAM Line 104:	const open = ansiStyles.bgColor[levelMapping[level]][model](...args);]();	killed 2364 ms
MUTANT 141:	RFCAM Line 110:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);	killed 8921 ms
MUTANT 142:	RFCAM Line 110:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);	killed 1979 ms
MUTANT 143:	RFCAM Line 110:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);	killed 8183 ms
MUTANT 144:	RFCAM Line 110:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);	survived 8901 ms
MUTANT 145:	RFCAM Line 110:	return build.call(this, this._styles ? this._styles.concat(codes)() : [codes], this._empty, model);	killed 7207 ms
MUTANT 146:	RFCAM Line 116:	const proto = Object.defineProperties(() => {}, (styles);	killed 6707 ms
MUTANT 147:	RFCAM Line 116:	const proto = Object.defineProperties(() => {}, styles);{});	killed 7551 ms
MUTANT 148:	RFCAM Line 119:	const builder = (...args) => applyStyle.call(builder, ...(...args);	killed 11400 ms
MUTANT 149:	RFCAM Line 119:	const builder = (...args) => applyStyle.call(builder, ...args);	killed 2770 ms
MUTANT 150:	RFCAM Line 125:	Object.defineProperty(builder, '('level', {	killed 10809 ms
MUTANT 151:	RFCAM Line 125:	Object.defineProperty(builder, 'level', {	killed 9090 ms
MUTANT 152:	RFCAM Line 125:	Object.defineProperty(builder, 'level'bject.defineProperty(builder, 'level', {	killed 1958 ms
MUTANT 153:	RFCAM Line 135:	Object.defineProperty(builder, '('enabled', {	killed 9301 ms
MUTANT 154:	RFCAM Line 135:	Object.defineProperty(builder, 'enabled', {	killed 9271 ms
MUTANT 155:	RFCAM Line 135:	Object.defineProperty(builder, 'enabled'bject.defineProperty(builder, 'enabled', {	killed 1847 ms
MUTANT 156:	RFCAM Line 158:	let str = String(args[0]);();	killed 9167 ms
MUTANT 157:	RFCAM Line 187:	str = code.open + str.replace(code.closeRe, code.open) + code.close;	killed 9382 ms
MUTANT 158:	RFCAM Line 187:	str = code.open + str.replace(code.closeRe, code.open) + code.close;	killed 9289 ms
MUTANT 159:	RFCAM Line 192:	str = str.replace(/\r?\n/g, `${(`${code.close}$&${code.open}`);	killed 9171 ms
MUTANT 160:	RFCAM Line 192:	str = str.replace(/\r?\n/g, `${code.close}$&${code.open}`););	killed 9426 ms
MUTANT 161:	RFCAM Line 204:	if (!Array.isArray(firstString))()) {	killed 9678 ms
MUTANT 162:	RFCAM Line 207:	return strings.join(' ');();	killed 8756 ms
MUTANT 163:	RFCAM Line 210:	const args = strings.slice(1);();	killed 8730 ms
MUTANT 164:	RFCAM Line 214:	parts.push(String(args[i - 1]).replace(/[{}\\]/g, '\\$&'));();	killed 2407 ms
MUTANT 165:	RFCAM Line 214:	parts.push(String(args[i - 1]).replace(/[{}\\]/g, '\\$&'));('\\$&'));	killed 8754 ms
MUTANT 166:	RFCAM Line 214:	parts.push(String(args[i - 1]).replace(/[{}\\]/g, '\\$&'));));	killed 8767 ms
MUTANT 167:	RFCAM Line 214:	parts.push(String(args[i - 1]).().replace(/[{}\\]/g, '\\$&'));	killed 2178 ms
MUTANT 168:	RFCAM Line 215:	parts.push(String(firstString.raw[i]));();	killed 10025 ms
MUTANT 169:	RFCAM Line 215:	parts.push(String(firstString.raw[i]));());	killed 11827 ms
MUTANT 170:	RFCAM Line 218:	return template(chalk, parts.join(''));	killed 9292 ms
MUTANT 171:	RFCAM Line 218:	return template(chalk, parts.join('')););	killed 8773 ms
MUTANT 172:	RFCAM Line 218:	return template(chalk, parts.join(''));());	killed 8842 ms
MUTANT 173:	RFCAM Line 221:	Object.defineProperties(Chalk.prototype, styles);	killed 8371 ms
MUTANT 174:	RFCAM Line 221:	Object.defineProperties(Chalk.prototype, styles);	killed 8461 ms
MUTANT 175:	RFDPM Line 18:	function applyOptions(obj, options = {}) {	killed 2311 ms
MUTANT 176:	RFDPM Line 18:	function applyOptions(obj,) options = {}) {	killed 2119 ms
MUTANT 177:	RFDPM Line 29:	function Chalk(options)() {	killed 2097 ms
MUTANT 178:	RFDPM Line 118:	function build(_styles, _empty, key) {	killed 2136 ms
MUTANT 179:	RFDPM Line 118:	function build(_styles, _empty, key) {	killed 2216 ms
MUTANT 180:	RFDPM Line 118:	function build(_styles, _empty, key) {	killed 2163 ms
MUTANT 181:	RFDPM Line 155:	function applyStyle(...args)() {	killed 2140 ms
MUTANT 182:	RFDPM Line 201:	function chalkTag(chalk, ...(...strings) {	killed 2139 ms
MUTANT 183:	RFDPM Line 201:	function chalkTag(chalk, ...strings) {	killed 2099 ms
MUTANT 184:	RFM Lines 18-27: Commented function applyOptions	killed 2150 ms
MUTANT 185:	RFM Lines 29-47: Commented function Chalk	killed 2152 ms
MUTANT 186:	RFM Lines 36-36: Commented function (anonymous / assigned)	killed 2147 ms
MUTANT 187:	RFM Lines 58-61: Commented function get	killed 2121 ms
MUTANT 188:	RFM Lines 66-68: Commented function get	killed 2203 ms
MUTANT 189:	RFM Lines 78-89: Commented function get	killed 2192 ms
MUTANT 190:	RFM Lines 80-88: Commented function (anonymous / assigned)	killed 2290 ms
MUTANT 191:	RFM Lines 101-112: Commented function get	killed 2156 ms
MUTANT 192:	RFM Lines 103-111: Commented function (anonymous / assigned)	killed 2161 ms
MUTANT 193:	RFM Lines 116-116: Commented function (anonymous / assigned)	killed 2178 ms
MUTANT 194:	RFM Lines 118-153: Commented function build	killed 2167 ms
MUTANT 195:	RFM Lines 119-119: Commented function (anonymous / assigned)	killed 2145 ms
MUTANT 196:	RFM Lines 127-129: Commented function get	killed 2158 ms
MUTANT 197:	RFM Lines 130-132: Commented function set	killed 2176 ms
MUTANT 198:	RFM Lines 137-139: Commented function get	killed 2137 ms
MUTANT 199:	RFM Lines 140-142: Commented function set	killed 2198 ms
MUTANT 200:	RFM Lines 155-199: Commented function applyStyle	killed 2138 ms
MUTANT 201:	RFM Lines 201-219: Commented function chalkTag	killed 2134 ms
MUTANT 202:	RLM Commented line 2:	const escapeStringRegexp = require('escape-string-regexp');	killed 2173 ms
MUTANT 203:	RLM Commented line 3:	const ansiStyles = require('ansi-styles');	killed 2220 ms
MUTANT 204:	RLM Commented line 4:	const stdoutColor = require('supports-color').stdout;	killed 2225 ms
MUTANT 205:	RLM Commented line 6:	const template = require('./templates.js');	killed 2131 ms
MUTANT 206:	RLM Commented line 8:	const isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');	killed 2147 ms
MUTANT 207:	RLM Commented line 11:	const levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];	killed 2171 ms
MUTANT 208:	RLM Commented line 14:	const skipModels = new Set(['gray']);	killed 2128 ms
MUTANT 209:	RLM Commented line 16:	const styles = Object.create(null);	killed 2139 ms
MUTANT 210:	RLM Commented line 20:	throw new Error('The `level` option should be an integer from 0 to 3');	killed 2163 ms
MUTANT 211:	RLM Commented line 24:	const scLevel = stdoutColor ? stdoutColor.level : 0;	killed 2215 ms
MUTANT 212:	RLM Commented line 25:	obj.level = options.level === undefined ? scLevel : options.level;	killed 2153 ms
MUTANT 213:	RLM Commented line 26:	obj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;	killed 2129 ms
MUTANT 214:	RLM Commented line 33:	const chalk = {};	killed 2114 ms
MUTANT 215:	RLM Commented line 34:	applyOptions(chalk, options);	killed 2160 ms
MUTANT 216:	RLM Commented line 36:	chalk.template = (...args) => chalkTag(...[chalk.template].concat(args));	killed 2192 ms
MUTANT 217:	RLM Commented line 38:	Object.setPrototypeOf(chalk, Chalk.prototype);	killed 2139 ms
MUTANT 218:	RLM Commented line 39:	Object.setPrototypeOf(chalk.template, chalk);	killed 2114 ms
MUTANT 219:	RLM Commented line 41:	chalk.template.constructor = Chalk;	killed 2270 ms
MUTANT 220:	RLM Commented line 43:	return chalk.template;	killed 2150 ms
MUTANT 221:	RLM Commented line 46:	applyOptions(this, options);	killed 2251 ms
MUTANT 222:	RLM Commented line 51:	ansiStyles.blue.open = '\u001B[94m';	killed 2189 ms
MUTANT 223:	RLM Commented line 55:	ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');	killed 2191 ms
MUTANT 224:	RLM Commented line 59:	const codes = ansiStyles[key];	killed 2194 ms
MUTANT 225:	RLM Commented line 60:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);	killed 2165 ms
MUTANT 226:	RLM Commented line 67:	return build.call(this, this._styles || [], true, 'visible');	killed 2152 ms
MUTANT 227:	RLM Commented line 71:	ansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');	killed 2129 ms
MUTANT 228:	RLM Commented line 74:	continue;	killed 2094 ms
MUTANT 229:	RLM Commented line 79:	const {level} = this;	killed 2131 ms
MUTANT 230:	RLM Commented line 81:	const open = ansiStyles.color[levelMapping[level]][model](...args);	killed 2180 ms
MUTANT 231:	RLM Commented line 87:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);	killed 2137 ms
MUTANT 232:	RLM Commented line 93:	ansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');	killed 2098 ms
MUTANT 233:	RLM Commented line 96:	continue;	killed 2116 ms
MUTANT 234:	RLM Commented line 99:	const bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);	killed 2150 ms
MUTANT 235:	RLM Commented line 102:	const {level} = this;	killed 2169 ms
MUTANT 236:	RLM Commented line 104:	const open = ansiStyles.bgColor[levelMapping[level]][model](...args);	killed 2132 ms
MUTANT 237:	RLM Commented line 110:	return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);	killed 2110 ms
MUTANT 238:	RLM Commented line 116:	const proto = Object.defineProperties(() => {}, styles);	killed 2129 ms
MUTANT 239:	RLM Commented line 119:	const builder = (...args) => applyStyle.call(builder, ...args);	killed 2112 ms
MUTANT 240:	RLM Commented line 120:	builder._styles = _styles;	killed 2126 ms
MUTANT 241:	RLM Commented line 121:	builder._empty = _empty;	killed 2229 ms
MUTANT 242:	RLM Commented line 123:	const self = this;	killed 2453 ms
MUTANT 243:	RLM Commented line 128:	return self.level;	killed 2167 ms
MUTANT 244:	RLM Commented line 131:	self.level = level;	killed 2147 ms
MUTANT 245:	RLM Commented line 138:	return self.enabled;	killed 2182 ms
MUTANT 246:	RLM Commented line 141:	self.enabled = enabled;	killed 2139 ms
MUTANT 247:	RLM Commented line 146:	builder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';	killed 2165 ms
MUTANT 248:	RLM Commented line 150:	builder.__proto__ = proto; // eslint-disable-line no-proto	killed 2266 ms
MUTANT 249:	RLM Commented line 152:	return builder;	killed 8690 ms
MUTANT 250:	RLM Commented line 157:	const argsLen = args.length;	killed 1846 ms
MUTANT 251:	RLM Commented line 158:	let str = String(args[0]);	killed 1862 ms
MUTANT 252:	RLM Commented line 161:	return '';	killed 1846 ms
MUTANT 253:	RLM Commented line 167:	str += ' ' + args[a];	killed 1814 ms
MUTANT 254:	RLM Commented line 172:	return this._empty ? '' : str;	killed 1761 ms
MUTANT 255:	RLM Commented line 178:	const originalDim = ansiStyles.dim.open;	killed 2033 ms
MUTANT 256:	RLM Commented line 180:	ansiStyles.dim.open = '';	killed 2199 ms
MUTANT 257:	RLM Commented line 187:	str = code.open + str.replace(code.closeRe, code.open) + code.close;	killed 2592 ms
MUTANT 258:	RLM Commented line 192:	str = str.replace(/\r?\n/g, `${code.close}$&${code.open}`);	killed 2267 ms
MUTANT 259:	RLM Commented line 196:	ansiStyles.dim.open = originalDim;	killed 1830 ms
MUTANT 260:	RLM Commented line 198:	return str;	killed 2588 ms
MUTANT 261:	RLM Commented line 202:	const firstString = strings[0];	killed 2314 ms
MUTANT 262:	RLM Commented line 207:	return strings.join(' ');	killed 2231 ms
MUTANT 263:	RLM Commented line 210:	const args = strings.slice(1);	killed 2176 ms
MUTANT 264:	RLM Commented line 211:	const parts = [firstString.raw[0]];	killed 2200 ms
MUTANT 265:	RLM Commented line 214:	parts.push(String(args[i - 1]).replace(/[{}\\]/g, '\\$&'));	killed 2392 ms
MUTANT 266:	RLM Commented line 215:	parts.push(String(firstString.raw[i]));	killed 2102 ms
MUTANT 267:	RLM Commented line 218:	return template(chalk, parts.join(''));	killed 3619 ms
MUTANT 268:	RLM Commented line 221:	Object.defineProperties(Chalk.prototype, styles);	killed 8921 ms
MUTANT 269:	RLM Commented line 224:	module.exports.supportsColor = stdoutColor;	survived 11147 ms
MUTANT 270:	RLM Commented line 225:	module.exports.default = module.exports; // For TypeScript	killed 2142 ms
MUTANT 271:	ROPM Line 79:	const {level}{} = this;	killed 2204 ms
MUTANT 272:	ROPM Line 83:	open,	killed 2175 ms
MUTANT 273:	ROPM Line 84:	close: ansiStyles.color.close,	killed 2225 ms
MUTANT 274:	ROPM Line 85:	closeRe: ansiStyles.color.closeRe	killed 2221 ms
MUTANT 275:	ROPM Line 102:	const {level}{} = this;	killed 2217 ms
MUTANT 276:	ROPM Line 106:	open,	killed 2272 ms
MUTANT 277:	ROPM Line 107:	close: ansiStyles.bgColor.close,	killed 2224 ms
MUTANT 278:	ROPM Line 108:	closeRe: ansiStyles.bgColor.closeRe	killed 2160 ms
MUTANT 279:	ROPM Line 126:	enumerable: true,	killed 2224 ms
MUTANT 280:	ROPM Line 136:	enumerable: true,	killed 2172 ms
MUTANT 281:	SLM Line 8:	const isSimpleWindowsTerm = process.platform === 'win32''' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');...	killed 8670 ms
MUTANT 282:	SLM Line 8:	const isSimpleWindowsTerm = process.platform === 'win32Tt6PJ' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');...	killed 8994 ms
MUTANT 283:	SLM Line 8:	const isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').'Mu38NWbaWO').toLowerCase().startsWith('xterm');...	survived 10901 ms
MUTANT 284:	SLM Line 8:	const isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');('');...	killed 8728 ms
MUTANT 285:	SLM Line 8:	const isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xtermgZ9X5');...	killed 8727 ms
MUTANT 286:	SLM Line 11:	const levelMapping = ['ansi',['', 'ansi', 'ansi256', 'ansi16m'];...	killed 10266 ms
MUTANT 287:	SLM Line 11:	const levelMapping = ['ansi6faJ', 'ansi', 'ansi256', 'ansi16m'];...	killed 8804 ms
MUTANT 288:	SLM Line 11:	const levelMapping = ['ansi', 'ansi','', 'ansi256', 'ansi16m'];...	killed 8690 ms
MUTANT 289:	SLM Line 11:	const levelMapping = ['ansi', 'ansiMaEt', 'ansi256', 'ansi16m'];...	killed 9328 ms
MUTANT 290:	SLM Line 11:	const levelMapping = ['ansi', 'ansi', 'ansi256','', 'ansi16m'];...	killed 8853 ms
MUTANT 291:	SLM Line 11:	const levelMapping = ['ansi', 'ansi', 'ansi2561oou1sB', 'ansi16m'];...	killed 8753 ms
MUTANT 292:	SLM Line 11:	const levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];''];...	killed 9012 ms
MUTANT 293:	SLM Line 11:	const levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16mbgbbNKN'];...	killed 9013 ms
MUTANT 294:	SLM Line 14:	const skipModels = new Set(['gray']);(['']);...	killed 8728 ms
MUTANT 295:	SLM Line 14:	const skipModels = new Set(['grayyTta']);...	killed 8726 ms
MUTANT 296:	SLM Line 20:	throw new Error('The `level` option should be an integer from 0 to 3');('');...	killed 2271 ms
MUTANT 297:	SLM Line 20:	throw new Error('The `level` option should be an integer from 0 to 3KgA48F5rO5HPRg9eQkKDQL3KTOyVLIRkFsUilw38ziqiGAOm4aa');...	killed 8579 ms
MUTANT 298:	SLM Line 26:	obj.enabled = 'enabled''' in options ? options.enabled : obj.level > 0;...	killed 8950 ms
MUTANT 299:	SLM Line 26:	obj.enabled = 'enabledVVmZecv' in options ? options.enabled : obj.level > 0;...	killed 8849 ms
MUTANT 300:	SLM Line 51:	ansiStyles.blue.open = '\u001B[94m';...	survived 9820 ms
MUTANT 301:	SLM Line 51:	ansiStyles.blue.open = '\u001B[94m'xZQdb';...	killed 8549 ms
MUTANT 302:	SLM Line 55:	ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');'');...	survived 11147 ms
MUTANT 303:	SLM Line 55:	ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'gP');...	killed 8521 ms
MUTANT 304:	SLM Line 67:	return build.call(this, this._styles || [], true, 'visible');'');...	survived 11300 ms
MUTANT 305:	SLM Line 67:	return build.call(this, this._styles || [], true, 'visiblebeIeuqB');...	survived 11343 ms
MUTANT 306:	SLM Line 71:	ansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');'');...	survived 10799 ms
MUTANT 307:	SLM Line 71:	ansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'gG');...	killed 8486 ms
MUTANT 308:	SLM Line 93:	ansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');'');...	survived 11008 ms
MUTANT 309:	SLM Line 93:	ansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'gf');...	killed 8418 ms
MUTANT 310:	SLM Line 99:	const bgModel = 'bg''' + model[0].toUpperCase() + model.slice(1);...	killed 2183 ms
MUTANT 311:	SLM Line 99:	const bgModel = 'bgqT' + model[0].toUpperCase() + model.slice(1);...	killed 8624 ms
MUTANT 312:	SLM Line 125:	Object.defineProperty(builder, 'level','', {...	killed 8834 ms
MUTANT 313:	SLM Line 125:	Object.defineProperty(builder, 'levelM54XC', {...	killed 8926 ms
MUTANT 314:	SLM Line 135:	Object.defineProperty(builder, 'enabled','', {...	killed 8839 ms
MUTANT 315:	SLM Line 135:	Object.defineProperty(builder, 'enabledCmFoNoK', {...	killed 8835 ms
MUTANT 316:	SLM Line 146:	builder.hasGrey = this.hasGrey || key === 'gray''' || key === 'grey';...	killed 8673 ms
MUTANT 317:	SLM Line 146:	builder.hasGrey = this.hasGrey || key === 'graydJoz' || key === 'grey';...	killed 8674 ms
MUTANT 318:	SLM Line 146:	builder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';'';...	survived 11103 ms
MUTANT 319:	SLM Line 146:	builder.hasGrey = this.hasGrey || key === 'gray' || key === 'greyP8HN';...	survived 10835 ms
MUTANT 320:	SLM Line 161:	return '';'nOXA98un35';...	killed 8554 ms
MUTANT 321:	SLM Line 167:	str += ''' ' + args[a];...	killed 2284 ms
MUTANT 322:	SLM Line 167:	str += ' y' + args[a];...	killed 8817 ms
MUTANT 323:	SLM Line 172:	return this._empty ? '''JSA80UJP9K' : str;...	killed 8853 ms
MUTANT 324:	SLM Line 180:	ansiStyles.dim.open = '';'i2cHckLTS0';...	killed 9092 ms
MUTANT 325:	SLM Line 207:	return strings.join(' ');('');...	killed 8599 ms
MUTANT 326:	SLM Line 207:	return strings.join(' n');...	killed 8746 ms
MUTANT 327:	SLM Line 214:	parts.push(String(args[i - 1]).replace(/[{}\\]/g, '\\$&'));'\'));...	killed 1834 ms
MUTANT 328:	SLM Line 214:	parts.push(String(args[i - 1]).replace(/[{}\\]/g, '\\$&'));'w7x'));...	killed 8750 ms
MUTANT 329:	SLM Line 218:	return template(chalk, parts.join(''));('OtnmnTqnqi'));...	killed 8920 ms

Out of 329 mutants, 305 were killed, 24 survived and 0 were discarded
Mutant coverage: 92.71%
Deleting copies...Done
Mutode 153860631 finished. Took 31m 59.1s

